#chapter 4: $resource
* usage of { id: "@id" } simplifies code

# chapter 6:
* using resolve with filtered routes
* express partial loading (moved to chapter 9), use script tag instead

# chapter 7:
* example of all validation types

# chapter 8: user interface pattern
* user interface pattern with first-/second level navigation

# chapter 9: backend integration
* rails backend: usage of $templateCache, script tag templates, etc.

# chapter 7: forms
* see team dashboard implementation of server-side validation
  (http://jsfiddle.net/rommsen/kyxrF/1/)
    $scope.form.source.$setValidity("maxlength", false);
    $scope.form.source.$dirty = true;


# structure:
* add more links to discussions on mailinglist and stackoverflow
* add link to github for each recipe
* add caption for for index.html, app.js, etc.

new chapter ideas:
* testing (E2E Testing not covered yet)
* i18n and localization

# chapter 10
* rails
  * mysql
  * scaffolding contacts resource
  * calling JSON REST API (generated by scaffold)
  * angular.js via sprockets angularjs-rails gem
  * authenticity token
  * application/json request content type required ?
  * $resource to call REST API (map underscore to camelCase params), $resource_rails??